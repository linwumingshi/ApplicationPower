plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    <%if(isUseDocker){ %>
    id 'docker'
     <% } %>
    id "maven-publish"
    id "com.ly.smart-doc" version "3.0.5"
}
group '${basePackage}'
version '1.0'

sourceCompatibility = '17'
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

repositories {
    maven {
        allowInsecureProtocol = true
        url 'http://localhost:8081/nexus/content/groups/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        url 'https://maven.aliyun.com/repository/gradle-plugin'
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'logback-classic'
}
smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'
    implementation group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '2.1.0'
    implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.2.21'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation('org.springframework.boot:spring-boot-starter-log4j2')
    implementation group: 'com.lmax', name: 'disruptor', version: '4.0.0'
    implementation ('org.springframework.boot:spring-boot-starter-aop')
    implementation group: 'com.alibaba.fastjson2', name: 'fastjson2', version: '2.0.47'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    <%if(useJTA){ %>
    implementation('org.springframework.boot:spring-boot-starter-jta-atomikos')
    <% } %>
    <% if(isMultipleDataSource){%>
    implementation 'com.github.shalousun:mybatis-template:1.0'
    <% } %>
    implementation 'com.github.shalousun:common-util:2.2.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'com.ly.smart-doc:smart-doc:3.0.5'

}

task('copyConf', type: Copy) {
    from "src/main/resources/"
    into "build/package/\${project.name}/config"
}

task('copyJar', type: Copy) {
    from 'build/libs'
    into "build/package/\${project.name}"
    dependsOn('build')
}

task('copyBin', type: Copy) {
    from 'src/main/scripts'
    into "build/package/\${project.name}/bin"
    fileMode 0755
}

task('package', type: Tar) {
    compression = Compression.GZIP
    archiveExtension = 'tar.gz'
    from "build/package"
    mustRunAfter('clean')
    dependsOn('clean', 'copyConf', 'copyJar', 'copyBin')
}

<%if(isUseDocker){ %>
task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    tagVersion = "1.0"
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
 <% } %>
//upload jar to nexus
def nexusUrl = "http://localhost:8081/nexus/content/repositories/releases/"
if (version.endsWith("-SNAPSHOT")) {
    nexusUrl = "http://localhost:8081/nexus/content/repositories/snapshots/"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version "${version}"
            from components.java
            // more goes in here
        }
    }
    repositories {
        maven {
            url nexusUrl
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}